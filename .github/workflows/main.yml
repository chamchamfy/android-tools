
name: 'RUN BUILD'
on: 
  workflow_dispatch:
jobs:
  upload-src:
    name: Upload the source
    runs-on: ubuntu-22.04
    steps:
      - name: prep ubuntu
        run: |
          sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -yq \
            ${{ matrix.pkgs }} cmake git clang golang libbrotli-dev \
            libgtest-dev liblz4-dev libpcre2-dev libprotobuf-dev libunwind-dev \
            libusb-1.0-0-dev libzstd-dev make pkg-config
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: git config
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
      - name: get vendor modules
        run: |
          cd vendor/boringssl
          go mod vendor
      - name: build & install
        run: |
          mkdir build && cd build
          cmake ..
          make package_source
      - name: upload package_source
        uses: actions/upload-artifact@v3
        with:
          name: package_source
          path: ${{ github.workspace }}/build/android-tools-*.tar.xz

  linux:
    runs-on: ubuntu-22.04
    needs: [upload-src]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "ubuntu:22.04"
            pkgs: "clang-11 libstdc++-10-dev"
            env1: "CC=clang-11 CXX=clang++-11"

    container:
      image: ${{ matrix.os }}
      options: --security-opt seccomp=unconfined

    steps:
      - name: prep ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -yq \
            ${{ matrix.pkgs }} cmake clang git golang libbrotli-dev \
            libgtest-dev liblz4-dev libpcre2-dev libprotobuf-dev libunwind-dev \
            libusb-1.0-0-dev libzstd-dev pkg-config protobuf-compiler ninja-build
      - name: download source
        uses: actions/download-artifact@v3
        with:
          name: package_source

      - name: build & install
        run: |
          export GOFLAGS="-mod=vendor"
          tar -xf android-tools-*.tar.xz
          cd android-tools-*/
          test -n "${{ matrix.env1 }}" && export ${{ matrix.env1 }}
          test -n "${{ matrix.env2 }}" && export ${{ matrix.env2 }}
          mkdir build && cd build
          cmake -DCMAKE_C_FLAGS="$CFLAGS" -DCMAKE_CXX_FLAGS="$CXXFLAGS" -DCMAKE_BUILD_TYPE=Release -GNinja ..
          ninja --verbose
          echo -e "\n### make install ###\n"
          cmake --install . --prefix /usr/local
          echo -e "\n### all done ###\n"

      - name: package 
        run: |
          # Package 
          mkdir -p $GITHUB_WORKSPACE/.github/bin
          cp -af /usr/local/bin/* $GITHUB_WORKSPACE/.github/bin
          
        
      - name: upload   
        uses: actions/upload-artifact@v3
        with:
          name: android-tools.zip
          path: .github/bin/*
          retention-days: 3
